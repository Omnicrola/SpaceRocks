{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/engine/Delta.js","src/engine/Renderer.js","src/engine/SpaceEngine.js","src/engine/SubsystemManager.js","src/engine/Time.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\r\n * Created by omnic on 11/29/2015.\r\n */\r\nmodule.exports = (function () {\r\n\r\n    var delta = function (options) {\r\n        this._time = options.time;\r\n        this._config = options.config;\r\n        this._lastFrame = 0;\r\n    };\r\n\r\n    delta.prototype.getInterval = function () {\r\n        var currentTime = this._time.getCurrentTime();\r\n        var elapsed = currentTime - this._lastFrame;\r\n        var delta = elapsed / (1000 / this._config.fps);\r\n        this._lastFrame = currentTime;\r\n        return Math.min(10, delta);\r\n    };\r\n\r\n    return delta;\r\n})();","/**\r\n * Created by omnic on 11/29/2015.\r\n */\r\nmodule.exports = (function () {\r\n    var renderer = function (canvasContext) {\r\n        this._canvasContext = canvasContext;\r\n        this._color = '#FFFFFF';\r\n        this._font = '12px monospace';\r\n        this._canvasContext.fillStyle = this._color;\r\n        this._canvasContext.strokeStyle = this._color;\r\n        this._canvasContext.font = this._font;\r\n    };\r\n\r\n    renderer.prototype.setColor = function (newColor) {\r\n        this._color = newColor;\r\n    };\r\n\r\n    renderer.prototype.setFont = function (newFont) {\r\n        this._font = newFont;\r\n    };\r\n\r\n    renderer.prototype.drawText = function (x, y, text) {\r\n        this._canvasContext.fillStyle = this._color;\r\n        this._canvasContext.font = this._font;\r\n        this._canvasContext.fillText(text, x, y);\r\n    }\r\n\r\n    renderer.prototype.fillRectangle = function (x, y, w, h) {\r\n        this._canvasContext.fillStyle = this._color;\r\n        this._canvasContext.fillRect(x, y, w, h);\r\n    };\r\n\r\n    renderer.prototype.drawLine = function (x1, y1, x2, y2) {\r\n        this._canvasContext.strokeStyle = this._color;\r\n        this._canvasContext.beginPath();\r\n        this._canvasContext.moveTo(x1, y1);\r\n        this._canvasContext.lineTo(x2, y2);\r\n        this._canvasContext.stroke();\r\n\r\n    };\r\n\r\n    renderer.prototype.clearCanvas = function (color) {\r\n        this._canvasContext.fillStyle = color;\r\n        var w = this._canvasContext.width;\r\n        var h = this._canvasContext.height;\r\n        this._canvasContext.fillRect(0, 0, w, h);\r\n    }\r\n\r\n\r\n    return renderer;\r\n})();","/**\r\n * Created by omnic on 11/29/2015.\r\n */\r\n\r\nvar Delta = require('./Delta');\r\nvar Time = require('./Time');\r\nvar SubsystemManager = require('./SubsystemManager');\r\nvar Renderer = require('./Renderer');\r\n\r\nmodule.exports = (function () {\r\n    var engine = function (options) {\r\n        this._delta = new Delta({\r\n            time: new Time(),\r\n            config: {\r\n                fps: 24\r\n            }\r\n        });\r\n        this._subsystemManager = new SubsystemManager();\r\n        this._renderer = new Renderer(_getCanvas(options.canvas));\r\n    };\r\n\r\n    function _getCanvas(canvasId) {\r\n        console.log(canvasId);\r\n        var canvasElement = document.getElementById(canvasId);\r\n        if (canvasElement) {\r\n            return canvasElement.getContext('2d');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    engine.prototype.start = function () {\r\n        window.setInterval(this.cycle, 1000 / 24);\r\n    };\r\n\r\n    engine.prototype.cycle = function () {\r\n        var interval = this._delta.getInterval();\r\n        this._subsystemManager.update(interval);\r\n        this._renderer.clearCanvas('#000000');\r\n        this._subsystemManager.render(this._renderer);\r\n    };\r\n\r\n    return engine;\r\n})();","/**\r\n * Created by omnic on 11/29/2015.\r\n */\r\nmodule.exports = (function () {\r\n    var subsystemManager = function () {\r\n        this._subsystems = [];\r\n    };\r\n    subsystemManager.prototype.addSubsystem = function (subsystem) {\r\n        this._subsystems.push(subsystem);\r\n    };\r\n    subsystemManager.prototype.update = function (delta) {\r\n        this._subsystems.forEach(function (subsystem) {\r\n            subsystem.update(delta);\r\n        });\r\n    };\r\n\r\n    subsystemManager.prototype.render = function (renderer) {\r\n        this._subsystems.forEach(function (subsystem) {\r\n            subsystem.render(renderer);\r\n        });\r\n    };\r\n    return subsystemManager;\r\n})();","/**\r\n * Created by omnic on 11/29/2015.\r\n */\r\nmodule.exports = (function () {\r\n    var timer = function () {\r\n\r\n    };\r\n    timer.prototype.getCurrentTime = function () {\r\n        return new Date().getTime();\r\n    }\r\n    return timer;\r\n})();"]}